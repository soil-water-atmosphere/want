% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GEO.R
\name{lininterpol.fun}
\alias{lininterpol.fun}
\title{Linear interpolator}
\usage{
lininterpol.fun(tointerp, zname = "z", domain = NULL)
}
\arguments{
\item{tointerp}{a dataframe containing at least a columns called "x" and
"y" which will be used as coordinates of points in the plane}

\item{zname}{the name of the column  to be interpolated, default "z"}

\item{domain}{optional; should be a matrix of two column defining a polygon,
outside of this the resulting function wil return a value NA}
}
\value{
a function that for any two arguments returns the interpolated value
}
\description{
constructs a function that performs a linear interpolation in
the traingles generated
by Delauney triangularization inside the convex hull given by the points.
Oustide of this convex hull an interpolation result calculated by the inverse
distance method will be returned.
}
\examples{
N=100
x = runif(N)
y = runif(N)
W = abs(x-y*y)
ToInt = data.frame(x=x,y=y,W=W)
Npl = 35
xtopl = seq(0,1,length=Npl)
ytopl = seq(0,1,length=Npl)
IntFun = lininterpol.fun(ToInt,zname="W")
z = outer(xtopl,ytopl,IntFun)
image(xtopl,ytopl,z)
}
\seealso{
\code{invdist.fun}, \code{nearestneighbour.fun}
}
